---
import Computer from "./icons/Computer.astro";
import Moon from "./icons/Moon.astro";
import Sun from "./icons/Sun.astro";

interface Props {
  class?: string;
}

const { class: klass } = Astro.props;

const toggles = [
  { theme: "system", icon: Computer },
  { theme: "light", icon: Sun },
  { theme: "dark", icon: Moon },
];
---

<div
  class:list={[
    "divide-x divide-gray-300 overflow-hidden rounded border border-gray-300 bg-white leading-[0] dark:divide-gray-600 dark:border-gray-600 dark:bg-gray-900",
    klass,
  ]}
>
  {
    toggles.map((toggle) => {
      return (
        <button
          id={`theme-toggle-${toggle.theme}`}
          onclick={`setTheme('${toggle.theme}')`}
          class="size-8 text-gray-900 data-[active=true]:bg-gray-200 dark:text-gray-100 dark:data-[active=true]:bg-gray-800"
        >
          <toggle.icon class="m-auto size-4" />
        </button>
      );
    })
  }
</div>

<script is:inline>
  function setTheme(theme) {
    if (theme === "system") {
      document.documentElement.classList.toggle(
        "dark",
        window.matchMedia("(prefers-color-scheme: dark)").matches,
      );
      delete localStorage.theme;
    } else if (theme === "dark") {
      document.documentElement.classList.add("dark");
      localStorage.theme = "dark";
    } else {
      document.documentElement.classList.remove("dark");
      localStorage.theme = "light";
    }
    const activeElement = document.querySelector(
      "[id^=theme-toggle][data-active=true]",
    );
    if (activeElement) {
      activeElement.dataset.active = false;
    }
    document.getElementById(`theme-toggle-${theme}`).dataset.active = true;
  }

  if (typeof localStorage !== "undefined" && "theme" in localStorage) {
    setTheme(localStorage.theme);
  } else {
    setTheme("system");
  }
</script>
